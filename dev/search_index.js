var documenterSearchIndex = {"docs":
[{"location":"objects/#AnnData-and-MuData","page":"AnnData and MuData","title":"AnnData and MuData","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"To put it briefly, AnnData objects represent annotated datasets with the main data as a matrix and with rich annotations that might include tables and arrays. MuData objects represent collections of AnnData objects focusing on, but not limited to, scenarios with different AnnData objects representing different sets of features profiled for the same samples.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Originally, both AnnData objects and MuData objects have been implemented in Python.","category":"page"},{"location":"objects/#AnnData","page":"AnnData and MuData","title":"AnnData","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"AnnData implementation in Muon.jl tries to mainly follow the reference implementation, albeit there are some differences in how these objects are implemented and behave due to how different languages are designed and opeate.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"AnnData objects can be stored in and read from .h5ad files.","category":"page"},{"location":"objects/#Creating-AnnData-objects","page":"AnnData and MuData","title":"Creating AnnData objects","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"A simple 2D array is already enough to initialize an annotated data object:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"import Random # hide\nRandom.seed!(1) # hide\nimport Muon.AnnData # hide\nx = rand(10, 2) * rand(2, 5);\nad = AnnData(X=x)","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Observations correpond to the rows of the matrix and have unique names:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"ad.obs_names .= \"obs_\" .* ad.obs_names","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Corresponding arrays for the observations are stored in the .obsm slot:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"import LinearAlgebra.svd, LinearAlgebra.Diagonal # hide\nf = svd(x);\nad.obsm[\"X_svd\"] = f.U * Diagonal(f.S);","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"When data is assigned, it is verified first that the dimensions match:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"ad.obsm[\"X_Vt\"] = f.Vt  # won't work\n# => DimensionMismatch","category":"page"},{"location":"objects/#Slicing-AnnData-objects","page":"AnnData and MuData","title":"Slicing AnnData objects","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Just as simple arrays, AnnData objects can be subsetted with slicing operations, with the first dimension corresponding to observations and the second dimension corresponding to variables:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"obs_sub = \"obs_\" .* string.(collect(1:3))\nad_sub = ad[obs_sub,:]","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Since the dimensions are labelled, using names is a natural way to subset these objects but boolean and integer arrays can be used as well:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"# both return the same subset\nad_sub[[true,false,true],:]\nad_sub[[1,3],:]","category":"page"},{"location":"objects/#Operations-on-AnnData-Objects","page":"AnnData and MuData","title":"Operations on AnnData Objects","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Make duplicate var_names unique by appending a numbered suffix.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"import Muon: var_names_make_unique! # hide\nvar_names_make_unique!(ad)","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Similarly, we can make obs_names unique also.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"import Muon: obs_names_make_unique! # hide\nobs_names_make_unique!(ad)","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"The data matrices of AnnData objects can be converted to a DataFrame, annotated with obs and var names.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"using DataFrames\nDataFrame(ad)","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"By default, the first column obs corresponds to the obs_names and the remaining columns are named according to the var_names. To obtain the transpose of this, pass columns=:obs.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"To use a different data matrix (the default is ad.X), pass the name of the layer:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"DataFrame(ad, layer=\"raw\")","category":"page"},{"location":"objects/#MuData","page":"AnnData and MuData","title":"MuData","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"The basic idea behind a multimodal object is key rightarrow value relationship where keys represent the unique names of individual modalities and values are AnnData objects that contain the correposnding data. Similarly to AnnData objects, MuData objects can also contain rich multimodal annotations.","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"import Distributions.Binomial # hide\nimport Muon.MuData # hide\nad2 = AnnData(X=rand(Binomial(1, 0.3), (10, 7)),\n              obs_names=\"obs_\" .* string.(collect(1:10)))\n\nmd = MuData(mod=Dict(\"view_rand\" => ad, \"view_binom\" => ad2))","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Features are considered unique to each modality.","category":"page"},{"location":"objects/#Slicing-MuData-objects","page":"AnnData and MuData","title":"Slicing MuData objects","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"Slicing now works across all modalities:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"md[[\"obs_1\", \"obs_9\"],:]","category":"page"},{"location":"objects/#Multimodal-annotation","page":"AnnData and MuData","title":"Multimodal annotation","text":"","category":"section"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"We can store annotation at the multimodal level, that includes multidimensional arrays:","category":"page"},{"location":"objects/","page":"AnnData and MuData","title":"AnnData and MuData","text":"md.obsm[\"X_svd\"] = f.U * Diagonal(f.S);\nmd.obsm","category":"page"},{"location":"#Muon.jl:-multimodal-framework","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"","category":"section"},{"location":"","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"Muon.jl provides functionality to work with multimodal datasets in Julia. It implements annotated data structures for unimodal and multimodal data and can be used together with the muon ecosystem across programming languages with data exchange via .h5mu files.","category":"page"},{"location":"","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"[//]: # (numfocus-fiscal-sponsor-attribution)","category":"page"},{"location":"","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"Muon.jl is part of the scverse® project (website, governance) and is fiscally sponsored by NumFOCUS. If you like scverse® and want to support our mission, please consider making a tax-deductible donation to help the project pay for developer time, professional services, travel, workshops, and a variety of other needs.","category":"page"},{"location":"","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"<div align=\"center\"> <a href=\"https://numfocus.org/project/scverse\">   <img     src=\"https://raw.githubusercontent.com/numfocus/templates/master/images/numfocus-logo.png\"     width=\"200\"","category":"page"},{"location":"","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"","category":"page"},{"location":"","page":"Muon.jl: multimodal framework","title":"Muon.jl: multimodal framework","text":"</a> </div>","category":"page"},{"location":"io/#I/O","page":"I/O","title":"I/O","text":"","category":"section"},{"location":"io/#Reading-.h5mu-files","page":"I/O","title":"Reading .h5mu files","text":"","category":"section"},{"location":"io/","page":"I/O","title":"I/O","text":"To read multimodal HDF5 files, which have the .h5mu extension, there is readh5mu:","category":"page"},{"location":"io/","page":"I/O","title":"I/O","text":"m = readh5mu(\"multimodal_dataset.h5mu\")\n# => MuData object 10101 x 101010","category":"page"},{"location":"io/#Writing-.h5mu-files","page":"I/O","title":"Writing .h5mu files","text":"","category":"section"},{"location":"io/","page":"I/O","title":"I/O","text":"To save the multimodal object on disk, there is writeh5mu:","category":"page"},{"location":"io/","page":"I/O","title":"I/O","text":"writeh5mu(\"multimodal_dataset.h5mu\", m)","category":"page"},{"location":"io/#io_anndata","page":"I/O","title":".h5ad files I/O","text":"","category":"section"},{"location":"io/","page":"I/O","title":"I/O","text":"For serializing and deserializing AnnData objects, there are writeh5ad and readh5ad:","category":"page"},{"location":"io/","page":"I/O","title":"I/O","text":"writeh5ad(\"dataset.h5ad\", ad)\nad = readh5ad(\"dataset.h5ad\")","category":"page"}]
}
