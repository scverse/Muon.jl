# This is a basic workflow to help you get started with Actions

name: runtests

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['~1.6', '~1.7']
        os: [ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup Julia environment
      - name: "Setup Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}

      # Cache binary artifacts
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/packages
            ~/.julia/registries
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      # run unit tests
      - name: "run unit tests"
        uses: julia-actions/julia-runtest@v1
        with:
          coverage: false
